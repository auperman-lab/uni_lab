1. SubsetsGiven an integer array set of unique elements, return all possible subsets (the power set).Return the solution in any order.2. XNORCreate a program that would ask for two boolean values (true or false, 0 or 1) and would output the result for the XNORoperation performed on them.You're allowed to use only `and`, `or` and `not` operations.3. Longest substringYou have a string T. In this exercise you need to write two programs that work with subsets of the string t. The firstprogram consists of having the string t, and you need to check all duplicated substring: (contiguous) substrings of tthat occur 2 or more times. The occurrences may overlap. Return any duplicated substring that has the longest possiblelength. If t does not have a duplicated substring, the answer is "".The second program consists of having the string tand you need to find the length of the longest substring without repeating characters.4. Truth table solverYou have to write a program that computes the truth table for various expressions. The set of expressions are limited to:- `and` operation- `or` operation- `not` operation- supports parenthesis5. Sierpinski triangleWrite a program that prints the Sierpinski triangle for the depth `n`, where `n` is an input value.Bonus: A game of life foreplay (aka [Elementary cellular automaton]In this problem we're going to take a look at elementary cellular automaton. Every cell is like a small microorganismwith a few primitive rules. When combining with other cells they form interesting patterns. There also is an interestingted talk  given by Stephen Wolfram that touches on this topic.Your task is to randomly generate a list (let's say of length 200, it's up to you in the end, just make sure to be long enough)containing only the numbers `0` and `1`. Then you start iterating over the list in order to compute the *next generation*.The rules that apply for the next generation are the following.